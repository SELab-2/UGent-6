#spring.datasource.url = jdbc:postgresql://localhost:5432/postgres
#spring.datasource.username = admin
#spring.datasource.password = root
#spring.jpa.show-sql=true
#spring.jpa.database=postgresql
#
## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

server.port=8080

azure.activedirectory.client-id=39136cda-f02f-4305-9b08-45f132bab07e
azure.activedirectory.b2c.client-secret=i1n8Q~57EDI.E2iLxzkW3Q.ixEtVIM4jwN7eDbxK

# For UGent auth: d7811cde-ecef-496c-8f91-a1786241b99c
# Test auth: 62835335-e5c4-4d22-98f2-9d5b65a06d9d
azure.activedirectory.tenant-id=d7811cde-ecef-496c-8f91-a1786241b99c

#spring.security.oauth2.client.registration.azure.client-id=39136cda-f02f-4305-9b08-45f132bab07e
#spring.security.oauth2.client.registration.azure.client-secret=i1n8Q~57EDI.E2iLxzkW3Q.ixEtVIM4jwN7eDbxK
#spring.security.oauth2.client.registration.azure.scope=openid, profile, email
#spring.security.oauth2.client.registration.azure.provider=azure

# TODO: this is just temporary, we will need to think of an actual limit at some point
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

#server.ssl.key-store=classpath:keystore.p12
#server.ssl.key-store-password=password
#server.ssl.key-store-type=PKCS12
#server.ssl.key-alias=testCert
#server.ssl.key-password=password

